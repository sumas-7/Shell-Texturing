[gd_scene load_steps=6 format=3 uid="uid://bxsn5bwyimr77"]

[sub_resource type="Shader" id="Shader_n7ppa"]
code = "shader_type spatial;

uniform float height_threshold;
uniform sampler2D noise;

void fragment()
{
	float height = texture(noise, UV).r;
	
	if(height > height_threshold)
	{
		ALBEDO = vec3(0.0, 1.0, 0.0);
	}
	else
	{
		ALPHA = 0.0;
	}
}"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_vomjr"]
noise_type = 0
frequency = 0.036
fractal_type = 0

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_sg20l"]
width = 32
height = 32
noise = SubResource("FastNoiseLite_vomjr")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_nv3gp"]
resource_local_to_scene = true
render_priority = 0
shader = SubResource("Shader_n7ppa")
shader_parameter/height_threshold = 0.01
shader_parameter/noise = SubResource("NoiseTexture2D_sg20l")

[sub_resource type="PlaneMesh" id="PlaneMesh_61cec"]
resource_local_to_scene = true
material = SubResource("ShaderMaterial_nv3gp")

[node name="Shell" type="MeshInstance3D"]
mesh = SubResource("PlaneMesh_61cec")
skeleton = NodePath("../../Camera3D")
